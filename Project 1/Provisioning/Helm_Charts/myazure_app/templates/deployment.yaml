---
  - name: Static Web
    hosts: localhost
    gather_facts: no
    tasks:
  
      - name: Create ConfigMap for website content
        k8s:
          state: present
          definition:
            apiVersion: {{ .Values.api.version}}
            kind: ConfigMap
            metadata:
              name: website-content-config
            data:
              index.html: |
                <!DOCTYPE html>
                <html>
                <head>
                  <title>My Static Website</title>
                </head>
                <body>
                  <h1>WELCOME to my website</h1>
                  <p>I am running this on a K8 cluster </p>
                </body>
                </html>
  
      - name: Deploy Static Web
        k8s:
          state: present
          definition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: {{ .Values.metadata.labels.app}}-deployment
              labels:
                app: {{ .Values.metadata.labels.app}}
            spec:
              replicas: {{ .Values.replicaCount}}
              selector:
                matchLabels:
                  app: {{ .Values.metadata.labels.app}}
              template:
                metadata:
                  labels:
                    app: {{ .Values.metadata.labels.app}}
                spec:
                  containers:
                  - name: nginx
                    image: {{ .Values.image.repository}}
                    ports:
                    - containerPort: {{ .Values.service.port}}
                    volumeMounts:
                    - name: website-content
                      mountPath: {{ .Values.volume.mount.path}}
                  volumes:
                  - name: website-content
                    configMap:
                      name: website-content-config
  
      - name: Create svc expose
        k8s:
          state: present
          definition:
            apiVersion: {{ .Values.api.version}}
            kind: Service
            metadata:
              name: {{ .Values.metadata.labels.app}}-service
            spec:
              selector:
                app: {{ .Values.metadata.labels.app}}
              ports:
              - protocol: {{ .Values.service.protocol}} #Can change depending on loadbalancer type. Application level or Network Level
                port: {{ .Values.service.port}}
                targetPort: {{ .Values.service.port}}
              type: {{ .Values.service.type}}  # Change to LoadBalancer or ClusterIP as needed
  