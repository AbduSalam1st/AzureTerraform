name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TF_VERSION: "1.9.8" # Set your desired Terraform version
  TF_WORKING_DIR: "./" # Path to your Terraform configuration directory
  TF_BACKEND_CONFIG_FILE: "backend.tfvars" # Optional backend configuration file

jobs:
  terraform:
    name: Terraform CI/CD Pipeline
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} # Required for Terraform Cloud

      # Terraform Init
      - name: Terraform Init
        run: terraform init -backend-config=${{ env.TF_BACKEND_CONFIG_FILE }}

      # Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Terraform Format Check
      - name: Terraform Format Check
        run: terraform fmt 

      # Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_example: ${{ secrets.GITHUB_TOKEN }} # Add your variables here

      # Upload Plan (for PRs)
      - name: Upload Plan (PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: tfplan

      # Terraform Apply (on push to main)
      - name: Terraform Apply
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_example: ${{ secrets.GITHUB_TOKEN }} # Add your variables here
